/* Animações Avançadas */

/* Animação de entrada para elementos */
@keyframes fadeInUp {
  from {
    opacity: 0;
    transform: translateY(30px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes fadeInLeft {
  from {
    opacity: 0;
    transform: translateX(-30px);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes fadeInRight {
  from {
    opacity: 0;
    transform: translateX(30px);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes scaleIn {
  from {
    opacity: 0;
    transform: scale(0.8);
  }
  to {
    opacity: 1;
    transform: scale(1);
  }
}

/* Animação de loading */
@keyframes spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

@keyframes pulse {
  0%, 100% {
    transform: scale(1);
    opacity: 1;
  }
  50% {
    transform: scale(1.05);
    opacity: 0.8;
  }
}

/* Animação para números sorteados */
@keyframes numberReveal {
  0% {
    opacity: 0;
    transform: scale(0.5) rotate(-180deg);
  }
  50% {
    opacity: 0.7;
    transform: scale(1.1) rotate(-90deg);
  }
  100% {
    opacity: 1;
    transform: scale(1) rotate(0deg);
  }
}

@keyframes bounceIn {
  0% {
    opacity: 0;
    transform: scale(0.3);
  }
  50% {
    opacity: 1;
    transform: scale(1.05);
  }
  70% {
    transform: scale(0.9);
  }
  100% {
    opacity: 1;
    transform: scale(1);
  }
}

/* Aplicação das animações */
.header {
  animation: fadeInUp 0.8s ease-out;
}

.main-information-container {
  animation: fadeInLeft 1s ease-out 0.2s both;
}

.main-draw-container {
  animation: fadeInRight 1s ease-out 0.4s both;
}

.draw-number {
  animation: scaleIn 0.6s ease-out 0.6s both;
}

.main-information-how {
  animation: fadeInUp 0.6s ease-out both;
}

.main-information-how:nth-child(3) {
  animation-delay: 0.8s;
}

.main-information-how:nth-child(4) {
  animation-delay: 1s;
}

/* Estados de loading */
.draw-button.loading {
  position: relative;
  color: transparent;
  pointer-events: none;
}

.draw-button.loading::after {
  content: '';
  position: absolute;
  top: 50%;
  left: 50%;
  width: 20px;
  height: 20px;
  margin: -10px 0 0 -10px;
  border: 2px solid transparent;
  border-top: 2px solid var(--content-primary);
  border-radius: 50%;
  animation: spin 1s linear infinite;
}

/* Animações para números sorteados */
.result-number {
  animation: numberReveal 0.8s ease-out forwards;
  opacity: 0;
}

.result-number:nth-child(1) { animation-delay: 0.1s; }
.result-number:nth-child(2) { animation-delay: 0.2s; }
.result-number:nth-child(3) { animation-delay: 0.3s; }
.result-number:nth-child(4) { animation-delay: 0.4s; }
.result-number:nth-child(5) { animation-delay: 0.5s; }
.result-number:nth-child(6) { animation-delay: 0.6s; }
.result-number:nth-child(7) { animation-delay: 0.7s; }
.result-number:nth-child(8) { animation-delay: 0.8s; }
.result-number:nth-child(9) { animation-delay: 0.9s; }
.result-number:nth-child(10) { animation-delay: 1s; }

/* Micro-interações */
.input-group input[type="number"] {
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
}

.input-group input[type="number"]:focus {
  transform: translateY(-2px);
  box-shadow: 0 4px 12px rgba(197, 141, 231, 0.3);
}

.input-group input[type="number"]:hover {
  border-color: var(--accent-pink);
  transform: translateY(-1px);
}

.toggle-label {
  transition: all 0.3s ease;
}

.toggle-label:hover {
  transform: translateX(2px);
}

.toggle-label:hover .toggle-text {
  color: var(--content-primary);
}

/* Efeitos hover aprimorados */
.draw-button {
  position: relative;
  overflow: hidden;
  transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
}

.draw-button::before {
  content: '';
  position: absolute;
  top: 0;
  left: -100%;
  width: 100%;
  height: 100%;
  background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);
  transition: left 0.6s;
}

.draw-button:hover::before {
  left: 100%;
}

.draw-button:hover {
  transform: translateY(-3px);
  box-shadow: 0 8px 25px rgba(139, 69, 255, 0.5);
}

.draw-again-button {
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  position: relative;
  overflow: hidden;
}

.draw-again-button::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 0;
  height: 100%;
  background-color: var(--content-brand);
  transition: width 0.3s ease;
  z-index: -1;
}

.draw-again-button:hover::before {
  width: 100%;
}

.draw-again-button:hover {
  color: var(--content-primary);
  transform: translateY(-2px);
  box-shadow: 0 4px 15px rgba(197, 141, 231, 0.4);
}

/* Animação para container de resultados */
.result-container {
  animation: scaleIn 0.6s ease-out;
}

.result-header {
  animation: fadeInUp 0.6s ease-out 0.2s both;
}

.result-numbers {
  animation: fadeInUp 0.6s ease-out 0.4s both;
}

.draw-again-button {
  animation: fadeInUp 0.6s ease-out 0.6s both;
}

/* Animações responsivas */
@media (max-width: 768px) {
  .main-information-container,
  .main-draw-container {
    animation: fadeInUp 0.8s ease-out both;
  }
  
  .main-information-container {
    animation-delay: 0.2s;
  }
  
  .main-draw-container {
    animation-delay: 0.4s;
  }
}

/* Reduzir animações para usuários que preferem menos movimento */
@media (prefers-reduced-motion: reduce) {
  *,
  *::before,
  *::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
  }
  
  .shape {
    animation: none;
  }
}